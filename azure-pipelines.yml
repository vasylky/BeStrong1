trigger:
  - main

pr:
  - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  client_id: $(AZURE_CLIENT_ID)
  client_secret: $(AZURE_CLIENT_SECRET)
  tenant_id: $(AZURE_TENANT_ID)
  subscription_id: $(AZURE_SUBSCRIPTION_ID)


stages:
  - stage: Validate
    jobs:
      - job: ValidateTerraform
        steps:
          # Завантаження tfvars
          - task: DownloadSecureFile@1
            name: downloadTfvars
            inputs:
              secureFile: 'terraform.tfvars'
          
          # Завантаження backend.config
          - task: DownloadSecureFile@1
            name: downloadBackend
            inputs:
              secureFile: 'backend.config'
          
          # Встановлення Terraform
          - task: TerraformInstaller@0
            inputs:
              terraformVersion: 'latest'
          
          # Ініціалізація з бекендом
          - task: AzureCLI@2
            displayName: 'Terraform Init'
            inputs:
              azureSubscription: 'bestrong-conn'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                terraform init -backend-config="$(downloadBackend.secureFilePath)"
              workingDirectory: '$(System.DefaultWorkingDirectory)'
          
          # Валідація
          - script: terraform validate
            displayName: 'Terraform Validate'
            workingDirectory: '$(System.DefaultWorkingDirectory)'
          
          # План (виконується завжди - і для PR, і для main)
          - task: AzureCLI@2
            displayName: 'Terraform Plan'
            inputs:
              azureSubscription: 'bestrong-conn'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                terraform plan -var-file="$(downloadTfvars.secureFilePath)"
              workingDirectory: '$(System.DefaultWorkingDirectory)'
  
  - stage: Apply
    dependsOn: Validate
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    jobs:
      - job: ApplyTerraform
        steps:
          - task: DownloadSecureFile@1
            name: downloadTfvars
            inputs:
              secureFile: 'terraform.tfvars'
          
          - task: DownloadSecureFile@1
            name: downloadBackend
            inputs:
              secureFile: 'backend.config'
          
          - task: TerraformInstaller@0
            inputs:
              terraformVersion: 'latest'
          
          - task: AzureCLI@2
            displayName: 'Terraform Init'
            inputs:
              azureSubscription: 'bestrong-conn'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                terraform init -backend-config="$(downloadBackend.secureFilePath)"
              workingDirectory: '$(System.DefaultWorkingDirectory)'
          
          - task: AzureCLI@2
            displayName: 'Terraform Apply'
            inputs:
              azureSubscription: 'bestrong-conn'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                terraform apply -auto-approve -var-file="$(downloadTfvars.secureFilePath)"
              workingDirectory: '$(System.DefaultWorkingDirectory)'